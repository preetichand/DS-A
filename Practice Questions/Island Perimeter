class Solution {
public:
    int islandPerimeter(vector<vector<int>>& grid) {
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[0].size();j++){
                if(grid[i][j]==1){
                    return dfs(grid,i,j);
                }
            }
        }
        return 0;
    }
    
    int dfs(vector<vector<int>>&grid,int i,int j){
        int m=grid.size(),n=grid[0].size(),res=0;
        
        if(i<0 || i==m || j<0 || j==n || grid[i][j]==0)
            return 1;
        
        if(grid[i][j]==2)
            return 0;
        
        grid[i][j]=2;
        res+=dfs(grid,i,j+1);
        res+=dfs(grid,i,j-1);
        res+=dfs(grid,i+1,j);
        res+=dfs(grid,i-1,j);
        
        return res;
        
    }
};
